{"ast":null,"code":"var _jsxFileName = \"D:\\\\SuperTeste\\\\vestibular-studies\\\\src\\\\pages\\\\QuestoesPage.js\",\n  _s = $RefreshSig$();\n// src/pages/QuestoesPage.jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport './QuestoesPage.css'; // cria este CSS (exemplo abaixo)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(a) {\n  // Fisher-Yates\n  const arr = [...a];\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\nexport default function QuestoesPage() {\n  _s();\n  var _answers$q$id2;\n  const {\n    id\n  } = useParams(); // ex: \"1,2,3\"\n  const materiaIds = (id || '').split(',').map(s => Number(s)).filter(Boolean);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // tentativa de recuperar config (primeiro do location.state, depois do sessionStorage)\n  const configFromState = location.state;\n  const stored = sessionStorage.getItem('studyConfig');\n  const config = configFromState || (stored ? JSON.parse(stored) : null);\n  const [loading, setLoading] = useState(true);\n  const [questoes, setQuestoes] = useState([]); // array final de questões\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({}); // { [questaoId]: { resposta, timeTakenSec } }\n  const [error, setError] = useState('');\n  const [timeLeft, setTimeLeft] = useState(null); // segundos, null = infinito\n  const totalTimeRef = useRef(null); // total em segundos, para barra\n\n  const intervalRef = useRef(null);\n  const startTimeRef = useRef(null); // tempo quando abriu a questão atual\n\n  // função para extrair opções da questão — ajuste conforme seu payload\n  const getOptions = q => {\n    // várias formas comuns:\n    if (Array.isArray(q.opcoes) && q.opcoes.length) return q.opcoes; // [{id, texto}]\n    if (Array.isArray(q.alternativas) && q.alternativas.length) return q.alternativas;\n    // se seu backend retorna alternativaA/B/C/D:\n    const opts = [];\n    if (q.alternativaA) opts.push({\n      id: 'A',\n      texto: q.alternativaA\n    });\n    if (q.alternativaB) opts.push({\n      id: 'B',\n      texto: q.alternativaB\n    });\n    if (q.alternativaC) opts.push({\n      id: 'C',\n      texto: q.alternativaC\n    });\n    if (q.alternativaD) opts.push({\n      id: 'D',\n      texto: q.alternativaD\n    });\n    if (opts.length) return opts;\n    return null; // resposta aberta\n  };\n  useEffect(() => {\n    const init = async () => {\n      if (!config || !materiaIds.length) {\n        setError('Configuração de estudo não encontrada. Volte para a página de seleção.');\n        setLoading(false);\n        return;\n      }\n      try {\n        // buscar questões por cada matéria (paralelo)\n        const fetches = materiaIds.map(mid => api.get(`Materia/${mid}/questoes`));\n        const responses = await Promise.all(fetches);\n\n        // responses[i].data -> array de questões dessa matéria\n        let final = [];\n        for (const resp of responses) {\n          var _resp$config$url$matc, _config$numQuestoesPo, _config$numQuestoesPo2;\n          const arr = Array.isArray(resp.data) ? resp.data : [];\n          // determina a matériaId (assume que cada questao tem materiaId ou we can get from arr[0].materiaId)\n          const mid = arr.length ? arr[0].materiaId || arr[0].materia_id || ((_resp$config$url$matc = resp.config.url.match(/Materia\\/(\\d+)/)) === null || _resp$config$url$matc === void 0 ? void 0 : _resp$config$url$matc[1]) : null;\n          // find requested count:\n          const requestedCount = (_config$numQuestoesPo = (_config$numQuestoesPo2 = config.numQuestoesPorMateria) === null || _config$numQuestoesPo2 === void 0 ? void 0 : _config$numQuestoesPo2[mid]) !== null && _config$numQuestoesPo !== void 0 ? _config$numQuestoesPo : 10;\n          const take = Math.min(requestedCount, arr.length);\n          const picked = shuffleArray(arr).slice(0, take);\n          // anexa materia id em cada questao se não existir (para referência)\n          const withMateria = picked.map(q => ({\n            ...q,\n            materiaId: Number(mid)\n          }));\n          final = final.concat(withMateria);\n        }\n\n        // embaralha o conjunto final (opcional)\n        final = shuffleArray(final);\n        setQuestoes(final);\n        setLoading(false);\n\n        // configurar timer\n        if (config.tempo == null) {\n          setTimeLeft(null); // infinito\n          totalTimeRef.current = null;\n        } else {\n          const totalSec = Number(config.tempo) * 60;\n          totalTimeRef.current = totalSec;\n          setTimeLeft(totalSec);\n        }\n\n        // registro de início\n        startTimeRef.current = Date.now();\n      } catch (err) {\n        console.error(err);\n        setError('Erro ao carregar questões.');\n        setLoading(false);\n      }\n    };\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // timer\n  useEffect(() => {\n    // se timeLeft === null => infinito => não inicia interval\n    if (timeLeft === null) return;\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t === null) return null;\n        if (t <= 1) {\n          clearInterval(intervalRef.current);\n          handleFinish(); // tempo acabou\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeLeft === null]); // reinicia apenas quando mudar entre infinito e não\n\n  // marcar resposta local e (opcional) salvar imediatamente\n  const handleAnswer = (questaoId, resposta) => {\n    const now = Date.now();\n    const timeTakenSec = Math.round((now - (startTimeRef.current || now)) / 1000);\n    setAnswers(prev => ({\n      ...prev,\n      [questaoId]: {\n        resposta,\n        timeTakenSec,\n        answeredAt: now\n      }\n    }));\n    // reinicia o timer de questão\n    startTimeRef.current = Date.now();\n  };\n  const handleNext = () => {\n    if (currentIndex < questoes.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      startTimeRef.current = Date.now();\n    }\n  };\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n      startTimeRef.current = Date.now();\n    }\n  };\n\n  // função para enviar respostas (batch)\n  const submitAnswers = async (finalizar = true) => {\n    // montar payload\n    const payload = {\n      respostas: Object.keys(answers).map(qid => ({\n        questaoId: qid,\n        resposta: answers[qid].resposta,\n        tempoSegundos: answers[qid].timeTakenSec\n      })),\n      // se seu backend precisa do id do usuário, ele pode ler do token do request\n      // ou você pode enviar userId aqui: userId: ...\n      metadata: {\n        materias: materiaIds,\n        config\n      }\n    };\n    try {\n      // tente enviar em batch — ajuste o endpoint conforme seu backend\n      await api.post('/respostas/batch', payload);\n      if (finalizar) {\n        // limpa config\n        sessionStorage.removeItem('studyConfig');\n        // redireciona pra dashboard ou página de resultado\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      console.error('Erro ao enviar respostas:', err);\n      // Se endpoint diferente, implemente conforme seu backend (ex.: salvar por questão)\n    }\n  };\n\n  // quando o tempo acabar\n  const handleFinish = () => {\n    // pode mostrar modal, etc. — por enquanto, submete automaticamente\n    submitAnswers(true);\n  };\n  const formatTime = sec => {\n    if (sec == null) return '--:--';\n    const m = Math.floor(sec / 60).toString().padStart(2, '0');\n    const s = (sec % 60).toString().padStart(2, '0');\n    return `${m}:${s}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questoes-loading\",\n    children: \"Carregando quest\\xF5es...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questoes-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 21\n  }, this);\n  if (!questoes.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questoes-empty\",\n    children: \"Nenhuma quest\\xE3o dispon\\xEDvel.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 32\n  }, this);\n  const q = questoes[currentIndex];\n  const options = getOptions(q);\n  const percentLeft = totalTimeRef.current && timeLeft != null ? Math.max(0, Math.round(timeLeft / totalTimeRef.current * 100)) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questoes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questoes-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [currentIndex + 1, \"/\", questoes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"questao-materia\",\n          children: [\"Mat\\xE9ria: \", q.materiaNome || q.materia || q.materiaId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: timeLeft === null ? 'Ilimitado' : formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), percentLeft != null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-bar-fill\",\n            style: {\n              width: `${percentLeft}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questao-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"enunciado\",\n        children: q.enunciado || q.titulo || 'Sem enunciado'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), options ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"opcoes-list\",\n        children: options.map(opt => {\n          var _ref, _ref2, _opt$id, _answers$q$id, _ref3, _ref4, _opt$texto;\n          const optId = (_ref = (_ref2 = (_opt$id = opt.id) !== null && _opt$id !== void 0 ? _opt$id : opt.codigo) !== null && _ref2 !== void 0 ? _ref2 : opt.letra) !== null && _ref !== void 0 ? _ref : optIdx();\n          const selected = ((_answers$q$id = answers[q.id]) === null || _answers$q$id === void 0 ? void 0 : _answers$q$id.resposta) === optId;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `opcao ${selected ? 'selected' : ''}`,\n            onClick: () => handleAnswer(q.id, optId),\n            children: (_ref3 = (_ref4 = (_opt$texto = opt.texto) !== null && _opt$texto !== void 0 ? _opt$texto : opt.text) !== null && _ref4 !== void 0 ? _ref4 : opt.label) !== null && _ref3 !== void 0 ? _ref3 : opt\n          }, optId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resposta-aberta\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Digite sua resposta...\",\n          value: ((_answers$q$id2 = answers[q.id]) === null || _answers$q$id2 === void 0 ? void 0 : _answers$q$id2.resposta) || '',\n          onChange: e => handleAnswer(q.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          disabled: currentIndex === 0,\n          className: \"nav-btn\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), currentIndex < questoes.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: \"nav-btn primary\",\n          children: \"Pr\\xF3xima\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitAnswers(true),\n          className: \"nav-btn primary\",\n          children: \"Enviar e Finalizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestoesPage, \"vLdnc5SNP806rLvof0dPL0PxSEA=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = QuestoesPage;\nvar _c;\n$RefreshReg$(_c, \"QuestoesPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useLocation","useNavigate","api","jsxDEV","_jsxDEV","shuffleArray","a","arr","i","length","j","Math","floor","random","QuestoesPage","_s","_answers$q$id2","id","materiaIds","split","map","s","Number","filter","Boolean","location","navigate","configFromState","state","stored","sessionStorage","getItem","config","JSON","parse","loading","setLoading","questoes","setQuestoes","currentIndex","setCurrentIndex","answers","setAnswers","error","setError","timeLeft","setTimeLeft","totalTimeRef","intervalRef","startTimeRef","getOptions","q","Array","isArray","opcoes","alternativas","opts","alternativaA","push","texto","alternativaB","alternativaC","alternativaD","init","fetches","mid","get","responses","Promise","all","final","resp","_resp$config$url$matc","_config$numQuestoesPo","_config$numQuestoesPo2","data","materiaId","materia_id","url","match","requestedCount","numQuestoesPorMateria","take","min","picked","slice","withMateria","concat","tempo","current","totalSec","Date","now","err","console","setInterval","t","clearInterval","handleFinish","handleAnswer","questaoId","resposta","timeTakenSec","round","prev","answeredAt","handleNext","handlePrev","submitAnswers","finalizar","payload","respostas","Object","keys","qid","tempoSegundos","metadata","materias","post","removeItem","formatTime","sec","m","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","percentLeft","max","materiaNome","materia","style","width","enunciado","titulo","opt","_ref","_ref2","_opt$id","_answers$q$id","_ref3","_ref4","_opt$texto","optId","codigo","letra","optIdx","selected","onClick","text","label","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["D:/SuperTeste/vestibular-studies/src/pages/QuestoesPage.js"],"sourcesContent":["// src/pages/QuestoesPage.jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport './QuestoesPage.css'; // cria este CSS (exemplo abaixo)\r\n\r\nfunction shuffleArray(a) {\r\n  // Fisher-Yates\r\n  const arr = [...a];\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport default function QuestoesPage() {\r\n  const { id } = useParams(); // ex: \"1,2,3\"\r\n  const materiaIds = (id || '').split(',').map((s) => Number(s)).filter(Boolean);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // tentativa de recuperar config (primeiro do location.state, depois do sessionStorage)\r\n  const configFromState = location.state;\r\n  const stored = sessionStorage.getItem('studyConfig');\r\n  const config = configFromState || (stored ? JSON.parse(stored) : null);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [questoes, setQuestoes] = useState([]); // array final de questões\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({}); // { [questaoId]: { resposta, timeTakenSec } }\r\n  const [error, setError] = useState('');\r\n  const [timeLeft, setTimeLeft] = useState(null); // segundos, null = infinito\r\n  const totalTimeRef = useRef(null); // total em segundos, para barra\r\n\r\n  const intervalRef = useRef(null);\r\n  const startTimeRef = useRef(null); // tempo quando abriu a questão atual\r\n\r\n  // função para extrair opções da questão — ajuste conforme seu payload\r\n  const getOptions = (q) => {\r\n    // várias formas comuns:\r\n    if (Array.isArray(q.opcoes) && q.opcoes.length) return q.opcoes; // [{id, texto}]\r\n    if (Array.isArray(q.alternativas) && q.alternativas.length) return q.alternativas;\r\n    // se seu backend retorna alternativaA/B/C/D:\r\n    const opts = [];\r\n    if (q.alternativaA) opts.push({ id: 'A', texto: q.alternativaA });\r\n    if (q.alternativaB) opts.push({ id: 'B', texto: q.alternativaB });\r\n    if (q.alternativaC) opts.push({ id: 'C', texto: q.alternativaC });\r\n    if (q.alternativaD) opts.push({ id: 'D', texto: q.alternativaD });\r\n    if (opts.length) return opts;\r\n    return null; // resposta aberta\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      if (!config || !materiaIds.length) {\r\n        setError('Configuração de estudo não encontrada. Volte para a página de seleção.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // buscar questões por cada matéria (paralelo)\r\n        const fetches = materiaIds.map((mid) => api.get(`Materia/${mid}/questoes`));\r\n        const responses = await Promise.all(fetches);\r\n\r\n        // responses[i].data -> array de questões dessa matéria\r\n        let final = [];\r\n\r\n        for (const resp of responses) {\r\n          const arr = Array.isArray(resp.data) ? resp.data : [];\r\n          // determina a matériaId (assume que cada questao tem materiaId ou we can get from arr[0].materiaId)\r\n          const mid = arr.length ? (arr[0].materiaId || arr[0].materia_id || resp.config.url.match(/Materia\\/(\\d+)/)?.[1]) : null;\r\n          // find requested count:\r\n          const requestedCount = config.numQuestoesPorMateria?.[mid] ?? 10;\r\n          const take = Math.min(requestedCount, arr.length);\r\n          const picked = shuffleArray(arr).slice(0, take);\r\n          // anexa materia id em cada questao se não existir (para referência)\r\n          const withMateria = picked.map((q) => ({ ...q, materiaId: Number(mid) }));\r\n          final = final.concat(withMateria);\r\n        }\r\n\r\n        // embaralha o conjunto final (opcional)\r\n        final = shuffleArray(final);\r\n\r\n        setQuestoes(final);\r\n        setLoading(false);\r\n\r\n        // configurar timer\r\n        if (config.tempo == null) {\r\n          setTimeLeft(null); // infinito\r\n          totalTimeRef.current = null;\r\n        } else {\r\n          const totalSec = Number(config.tempo) * 60;\r\n          totalTimeRef.current = totalSec;\r\n          setTimeLeft(totalSec);\r\n        }\r\n\r\n        // registro de início\r\n        startTimeRef.current = Date.now();\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Erro ao carregar questões.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    init();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // timer\r\n  useEffect(() => {\r\n    // se timeLeft === null => infinito => não inicia interval\r\n    if (timeLeft === null) return;\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((t) => {\r\n        if (t === null) return null;\r\n        if (t <= 1) {\r\n          clearInterval(intervalRef.current);\r\n          handleFinish(); // tempo acabou\r\n          return 0;\r\n        }\r\n        return t - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timeLeft === null]); // reinicia apenas quando mudar entre infinito e não\r\n\r\n  // marcar resposta local e (opcional) salvar imediatamente\r\n  const handleAnswer = (questaoId, resposta) => {\r\n    const now = Date.now();\r\n    const timeTakenSec = Math.round((now - (startTimeRef.current || now)) / 1000);\r\n    setAnswers((prev) => ({ ...prev, [questaoId]: { resposta, timeTakenSec, answeredAt: now } }));\r\n    // reinicia o timer de questão\r\n    startTimeRef.current = Date.now();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentIndex < questoes.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n      startTimeRef.current = Date.now();\r\n    }\r\n  };\r\n  const handlePrev = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(currentIndex - 1);\r\n      startTimeRef.current = Date.now();\r\n    }\r\n  };\r\n\r\n  // função para enviar respostas (batch)\r\n  const submitAnswers = async (finalizar = true) => {\r\n    // montar payload\r\n    const payload = {\r\n      respostas: Object.keys(answers).map((qid) => ({\r\n        questaoId: qid,\r\n        resposta: answers[qid].resposta,\r\n        tempoSegundos: answers[qid].timeTakenSec,\r\n      })),\r\n      // se seu backend precisa do id do usuário, ele pode ler do token do request\r\n      // ou você pode enviar userId aqui: userId: ...\r\n      metadata: {\r\n        materias: materiaIds,\r\n        config,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // tente enviar em batch — ajuste o endpoint conforme seu backend\r\n      await api.post('/respostas/batch', payload);\r\n      if (finalizar) {\r\n        // limpa config\r\n        sessionStorage.removeItem('studyConfig');\r\n        // redireciona pra dashboard ou página de resultado\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      console.error('Erro ao enviar respostas:', err);\r\n      // Se endpoint diferente, implemente conforme seu backend (ex.: salvar por questão)\r\n    }\r\n  };\r\n\r\n  // quando o tempo acabar\r\n  const handleFinish = () => {\r\n    // pode mostrar modal, etc. — por enquanto, submete automaticamente\r\n    submitAnswers(true);\r\n  };\r\n\r\n  const formatTime = (sec) => {\r\n    if (sec == null) return '--:--';\r\n    const m = Math.floor(sec / 60)\r\n      .toString()\r\n      .padStart(2, '0');\r\n    const s = (sec % 60).toString().padStart(2, '0');\r\n    return `${m}:${s}`;\r\n  };\r\n\r\n  if (loading) return <div className=\"questoes-loading\">Carregando questões...</div>;\r\n  if (error) return <div className=\"questoes-error\">{error}</div>;\r\n  if (!questoes.length) return <div className=\"questoes-empty\">Nenhuma questão disponível.</div>;\r\n\r\n  const q = questoes[currentIndex];\r\n  const options = getOptions(q);\r\n\r\n  const percentLeft =\r\n    totalTimeRef.current && timeLeft != null\r\n      ? Math.max(0, Math.round((timeLeft / totalTimeRef.current) * 100))\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"questoes-page\">\r\n      <div className=\"questoes-topbar\">\r\n        <div className=\"progress-info\">\r\n          <strong>\r\n            {currentIndex + 1}/{questoes.length}\r\n          </strong>\r\n          <span className=\"questao-materia\">Matéria: {q.materiaNome || q.materia || q.materiaId}</span>\r\n        </div>\r\n\r\n        <div className=\"timer-box\">\r\n          <div className=\"timer\">{timeLeft === null ? 'Ilimitado' : formatTime(timeLeft)}</div>\r\n          {percentLeft != null && (\r\n            <div className=\"timer-bar\">\r\n              <div className=\"timer-bar-fill\" style={{ width: `${percentLeft}%` }} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"questao-card\">\r\n        <h3 className=\"enunciado\">{q.enunciado || q.titulo || 'Sem enunciado'}</h3>\r\n\r\n        {options ? (\r\n          <div className=\"opcoes-list\">\r\n            {options.map((opt) => {\r\n              const optId = opt.id ?? opt.codigo ?? opt.letra ?? optIdx();\r\n              const selected = answers[q.id]?.resposta === optId;\r\n              return (\r\n                <button\r\n                  key={optId}\r\n                  className={`opcao ${selected ? 'selected' : ''}`}\r\n                  onClick={() => handleAnswer(q.id, optId)}\r\n                >\r\n                  {opt.texto ?? opt.text ?? opt.label ?? opt}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"resposta-aberta\">\r\n            <textarea\r\n              placeholder=\"Digite sua resposta...\"\r\n              value={answers[q.id]?.resposta || ''}\r\n              onChange={(e) => handleAnswer(q.id, e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"nav-buttons\">\r\n          <button onClick={handlePrev} disabled={currentIndex === 0} className=\"nav-btn\">\r\n            Anterior\r\n          </button>\r\n          {currentIndex < questoes.length - 1 ? (\r\n            <button onClick={handleNext} className=\"nav-btn primary\">\r\n              Próxima\r\n            </button>\r\n          ) : (\r\n            <button onClick={() => submitAnswers(true)} className=\"nav-btn primary\">\r\n              Enviar e Finalizar\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}